{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","href","imdbID","target","rel","Title","Plot","MoviesList","movies","map","request","title","a","fetch","response","json","FindMovie","React","memo","addMovie","useState","setTitle","previeData","setPrevieData","isError","setIsError","findMovie","film","Response","htmlFor","type","id","placeholder","classNames","value","onChange","event","onClick","App","setMovies","some","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2eca8fad.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <a\n                href={`https://www.imdb.com/title/${movie.imdbID}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </a>\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API = 'https://www.omdbapi.com/?apikey=224b6ad3&';\n\nexport const request = async (title: string) => {\n  const response = await fetch(`${API}t=${title}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { request } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = React.memo(({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [previeData, setPrevieData] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const findMovie = async () => {\n    if (!title) {\n      return;\n    }\n\n    const film = await request(title);\n\n    if (film.Response === 'False') {\n      setIsError(true);\n\n      return;\n    }\n\n    if (previeData?.imdbID === film.imdbID) {\n      return;\n    }\n\n    setTitle('');\n    setPrevieData({\n      Poster: film.Poster,\n      Title: film.Title,\n      Plot: film.Plot,\n      imdbID: film.imdbID,\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': isError })}\n              value={title}\n              onChange={(event) => {\n                setIsError(false);\n                setTitle(event.target.value);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (previeData) {\n                  addMovie(previeData);\n                  setPrevieData(null);\n                  setTitle('');\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {previeData && <MovieCard movie={previeData} />}\n      </div>\n    </>\n  );\n});\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const checkFilms = movies.some(item => item.imdbID === movie.imdbID);\n\n    if (checkFilms) {\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}